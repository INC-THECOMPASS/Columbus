{"version":3,"file":"controls.min.js","sources":["../src/services/lifecycleManager.ts","../src/config/constants.ts","../src/services/validator.ts","../src/services/getter.ts","../src/utils/controls/preventContextMenu.ts","../src/utils/controls/common/common.ts","../src/utils/controls/preventDrag.ts","../src/utils/controls/preventKeydown.ts"],"sourcesContent":["type LifecycleEvent = 'DOMContentLoaded' | 'load' | 'beforeunload' | 'unload';\ntype lifecycleHandler = () => void;\n\nconst lifecycleEvents: { [key in LifecycleEvent]?: Array<() => void> } = {\n  DOMContentLoaded: [],\n  load: [],\n  beforeunload: [],\n  unload: [],\n};\n\n// 이벤트 발생여부 파악\nconst eventFired: { [key in LifecycleEvent]?: boolean } = {\n  DOMContentLoaded: false,\n  load: false,\n  beforeunload: false,\n  unload: false,\n};\n\n// 이벤트 발생여부를 파악해, 즉시 실행에 대한 여부를 결정\nconst onEvent = (event: LifecycleEvent, callback: lifecycleHandler) => {\n  if (eventFired[event]) {\n    callback();\n    return;\n  }\n\n  lifecycleEvents[event]?.push(callback);\n};\n\n// 각 이벤트 발생 시 콜백 실행\ndocument.addEventListener('DOMContentLoaded', () => {\n  eventFired.DOMContentLoaded = true;\n  lifecycleEvents.DOMContentLoaded?.forEach((callback) => callback());\n});\n\nwindow.addEventListener('load', () => {\n  eventFired.load = true;\n  lifecycleEvents.load?.forEach((callback) => callback());\n});\n\nwindow.addEventListener('beforeunload', () => {\n  eventFired.beforeunload = true;\n  lifecycleEvents.beforeunload?.forEach((callback) => callback());\n});\n\nwindow.addEventListener('unload', () => {\n  eventFired.unload = true;\n  lifecycleEvents.unload?.forEach((callback) => callback());\n});\n\nexport { LifecycleEvent, onEvent };\n","const PROMPT_MSG = {\n  empty_text: '빈 값 입니다.',\n  empty_elem: '선택된 요소가 없습니다.',\n  wrong_attr: '잘못된 속성 값을 입력하셨습니다.',\n};\n\nexport default PROMPT_MSG;\n","import PROMPT_MSG from '../config/constants';\n\nconst validateElements = (\n  elements: NodeListOf<Element> | null,\n): Element | NodeListOf<Element> => {\n  if (!elements) {\n    throw new Error(PROMPT_MSG.empty_elem);\n  }\n\n  return elements;\n};\n\nconst validateAttr = (attr: string, value: string): boolean => {\n  return attr === value;\n};\n\nconst validateAttrInList = (attr: string, validAttrs: string[]): boolean => {\n  return validAttrs.includes(attr);\n};\n\nconst validateText = (text: string | null): string => {\n  if (!text) {\n    throw new Error(PROMPT_MSG.empty_text);\n  }\n\n  return text;\n};\n\nexport { validateElements, validateAttr, validateAttrInList, validateText };\n","import { validateElements, validateText } from './validator';\n\nconst getElements = (selector: string): NodeListOf<Element> => {\n  const elements = document.querySelectorAll(selector);\n  validateElements(elements);\n\n  return elements;\n};\n\nconst getElementAttr = (element: Element, customAttr: string): string => {\n  const attr = element.getAttribute(validateText(customAttr));\n  return validateText(attr);\n};\n\nexport { getElements, getElementAttr };\n","import { onEvent } from '../../services/lifecycleManager';\nimport { getElementAttr, getElements } from '../../services/getter';\nimport { validateAttr } from '../../services/validator';\nimport { disableContextMenu } from './common/common';\n\nconst preventContextMenu = () => {\n  const customAttr = 'tc-prevent-contextmenu';\n  const attrValue = 'true';\n\n  const elements = getElements(`[${customAttr}]`);\n\n  elements.forEach((elem: Element) => {\n    const attr = getElementAttr(elem, customAttr);\n\n    if (validateAttr(attr, attrValue)) {\n      disableContextMenu(elem);\n    }\n  });\n};\n\nonEvent('DOMContentLoaded', preventContextMenu);\n\nexport default preventContextMenu;\n","const disableContextMenu = (elem: Element): void => {\n  elem.addEventListener('contextmenu', (event) => {\n    event.preventDefault();\n  });\n};\n\nconst disableDrag = (elem: Element): void => {\n  elem.addEventListener('dragstart', (event) => {\n    event.preventDefault();\n  });\n};\n\nconst disableKeydown = (elem: Element): void => {\n  elem.addEventListener('keydown', (event) => {\n    event.preventDefault();\n  });\n};\n\nexport {disableContextMenu, disableDrag, disableKeydown}","import { onEvent } from '../../services/lifecycleManager';\nimport { getElementAttr, getElements } from '../../services/getter';\nimport { validateAttr } from '../../services/validator';\nimport { disableDrag } from './common/common';\n\nconst preventDrag = () => {\n  const customAttr = 'tc-prevent-drag';\n  const attrValue = 'true';\n\n  const elements = getElements(`[${customAttr}]`);\n\n  elements.forEach((elem: Element) => {\n    const attr = getElementAttr(elem, customAttr);\n\n    if (validateAttr(attr, attrValue)) {\n      disableDrag(elem);\n    }\n  });\n};\n\nonEvent('DOMContentLoaded', preventDrag);\n\nexport default preventDrag;\n","import { onEvent } from '../../services/lifecycleManager';\nimport { getElementAttr, getElements } from '../../services/getter';\nimport { validateAttr } from '../../services/validator';\nimport { disableKeydown } from './common/common';\n\nconst preventKeydown = () => {\n  const customAttr = 'tc-prevent-keydown';\n  const attrValue = 'true';\n\n  const elements = getElements(`[${customAttr}]`);\n\n  elements.forEach((elem: Element) => {\n    const attr = getElementAttr(elem, customAttr);\n\n    if (validateAttr(attr, attrValue)) {\n      disableKeydown(elem);\n    }\n  });\n};\n\nonEvent('DOMContentLoaded', preventKeydown);\n\nexport default preventKeydown;\n"],"names":["lifecycleEvents","DOMContentLoaded","load","beforeunload","unload","eventFired","onEvent","event","callback","_a","push","document","addEventListener","forEach","window","PROMPT_MSG","validateAttr","attr","value","validateText","text","Error","getElements","selector","elements","querySelectorAll","validateElements","getElementAttr","element","customAttr","getAttribute","elem","preventDefault","disableContextMenu","disableDrag","disableKeydown"],"mappings":"2FAGA,MAAMA,EAAmE,CACvEC,iBAAkB,GAClBC,KAAM,GACNC,aAAc,GACdC,OAAQ,IAIJC,EAAoD,CACxDJ,kBAAkB,EAClBC,MAAM,EACNC,cAAc,EACdC,QAAQ,GAIJE,EAAU,CAACC,EAAuBC,WAClCH,EAAWE,GACbC,YAIFC,EAAAT,EAAgBO,mBAAQG,KAAKF,EAAS,EAIxCG,SAASC,iBAAiB,oBAAoB,WAC5CP,EAAWJ,kBAAmB,EACE,QAAhCQ,EAAAT,EAAgBC,wBAAgB,IAAAQ,GAAAA,EAAEI,SAASL,GAAaA,KAAW,IAGrEM,OAAOF,iBAAiB,QAAQ,WAC9BP,EAAWH,MAAO,EACE,QAApBO,EAAAT,EAAgBE,YAAI,IAAAO,GAAAA,EAAEI,SAASL,GAAaA,KAAW,IAGzDM,OAAOF,iBAAiB,gBAAgB,WACtCP,EAAWF,cAAe,EACE,QAA5BM,EAAAT,EAAgBG,oBAAY,IAAAM,GAAAA,EAAEI,SAASL,GAAaA,KAAW,IAGjEM,OAAOF,iBAAiB,UAAU,WAChCP,EAAWD,QAAS,EACE,QAAtBK,EAAAT,EAAgBI,cAAM,IAAAK,GAAAA,EAAEI,SAASL,GAAaA,KAAW,IC9C3D,MAAMO,EACQ,WADRA,EAEQ,gBCURC,EAAe,CAACC,EAAcC,IAC3BD,IAASC,EAOZC,EAAgBC,IACpB,IAAKA,EACH,MAAM,IAAIC,MAAMN,GAGlB,OAAOK,CAAI,ECvBPE,EAAeC,IACnB,MAAMC,EAAWb,SAASc,iBAAiBF,GAG3C,MDJuB,CACvBC,IAEA,IAAKA,EACH,MAAM,IAAIH,MAAMN,EAGH,ECLfW,CAAiBF,GAEVA,CAAQ,EAGXG,EAAiB,CAACC,EAAkBC,KACxC,MAAMZ,EAAOW,EAAQE,aAAaX,EAAaU,IAC/C,OAAOV,EAAaF,EAAK,ECS3BX,EAAQ,oBAfmB,KACzB,MAAMuB,EAAa,yBAGFP,EAAY,IAAIO,MAExBhB,SAASkB,IAChB,MAAMd,EAAOU,EAAeI,EAAMF,GAE9Bb,EAAaC,EAPD,SCPO,CAACc,IAC1BA,EAAKnB,iBAAiB,eAAgBL,IACpCA,EAAMyB,gBAAgB,GACtB,EDYEC,CAAmBF,KAErB,IEGJzB,EAAQ,oBAfY,KAClB,MAAMuB,EAAa,kBAGFP,EAAY,IAAIO,MAExBhB,SAASkB,IAChB,MAAMd,EAAOU,EAAeI,EAAMF,GAE9Bb,EAAaC,EAPD,SDDA,CAACc,IACnBA,EAAKnB,iBAAiB,aAAcL,IAClCA,EAAMyB,gBAAgB,GACtB,ECMEE,CAAYH,KAEd,ICGJzB,EAAQ,oBAfe,KACrB,MAAMuB,EAAa,qBAGFP,EAAY,IAAIO,MAExBhB,SAASkB,IAChB,MAAMd,EAAOU,EAAeI,EAAMF,GAE9Bb,EAAaC,EAPD,SFKG,CAACc,IACtBA,EAAKnB,iBAAiB,WAAYL,IAChCA,EAAMyB,gBAAgB,GACtB,EEAEG,CAAeJ,KAEjB"}