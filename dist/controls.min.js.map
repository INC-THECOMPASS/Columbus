{"version":3,"file":"controls.min.js","sources":["../src/utils/controls/common/common.ts","../src/services/lifecycleManager.ts","../src/config/constants.ts","../src/services/validator.ts","../src/services/getter.ts","../src/utils/controls/preventCopy.ts","../src/utils/controls/preventContextMenu.ts","../src/utils/controls/preventDrag.ts","../src/utils/controls/preventKeydown.ts"],"sourcesContent":["const disableContextMenu = (): void => {\n  document.addEventListener('contextmenu', (event) => {\n    event.preventDefault();\n  });\n};\n\nconst disableDrag = (): void => {\n  document.addEventListener('dragstart', (event) => {\n    event.preventDefault();\n  });\n};\n\nconst disableKeydown = (): void => {\n  document.addEventListener('keydown', (event) => {\n    event.preventDefault();\n  });\n};\n\nexport { disableContextMenu, disableDrag, disableKeydown };\n","type LifecycleEvent = 'DOMContentLoaded' | 'load' | 'beforeunload' | 'unload';\ntype lifecycleHandler = () => void;\n\nconst lifecycleEvents: { [key in LifecycleEvent]?: Array<() => void> } = {\n  DOMContentLoaded: [],\n  load: [],\n  beforeunload: [],\n  unload: [],\n};\n\n// 이벤트 발생여부 파악\nconst eventFired: { [key in LifecycleEvent]?: boolean } = {\n  DOMContentLoaded: false,\n  load: false,\n  beforeunload: false,\n  unload: false,\n};\n\n// 이벤트 발생여부를 파악해, 즉시 실행에 대한 여부를 결정\nconst onEvent = (event: LifecycleEvent, callback: lifecycleHandler) => {\n  if (eventFired[event]) {\n    callback();\n    return;\n  }\n\n  lifecycleEvents[event]?.push(callback);\n};\n\n// 각 이벤트 발생 시 콜백 실행\ndocument.addEventListener('DOMContentLoaded', () => {\n  eventFired.DOMContentLoaded = true;\n  lifecycleEvents.DOMContentLoaded?.forEach((callback) => callback());\n});\n\nwindow.addEventListener('load', () => {\n  eventFired.load = true;\n  lifecycleEvents.load?.forEach((callback) => callback());\n});\n\nwindow.addEventListener('beforeunload', () => {\n  eventFired.beforeunload = true;\n  lifecycleEvents.beforeunload?.forEach((callback) => callback());\n});\n\nwindow.addEventListener('unload', () => {\n  eventFired.unload = true;\n  lifecycleEvents.unload?.forEach((callback) => callback());\n});\n\nexport { LifecycleEvent, onEvent };\n","const PROMPT_MSG = {\n  empty_text: '빈 값 입니다.',\n  empty_elem: '선택된 요소가 없습니다.',\n  wrong_attr: '잘못된 속성 값을 입력하셨습니다.',\n};\n\nexport default PROMPT_MSG;\n","import PROMPT_MSG from '../config/constants';\n\nconst validateElements = (\n  elements: NodeListOf<Element> | null,\n): Element | NodeListOf<Element> => {\n  if (!elements) {\n    throw new Error(PROMPT_MSG.empty_elem);\n  }\n\n  return elements;\n};\n\nconst validateAttr = (attr: string, value: string): boolean => {\n  const isValidAttr = attr === value;\n\n  if (!isValidAttr) {\n    throw new Error(PROMPT_MSG.wrong_attr);\n  }\n\n  return isValidAttr;\n};\n\nconst validateAttrInList = (attr: string, validAttrs: string[]): boolean => {\n  const isValidAttr = validAttrs.includes(attr);\n\n  if (isValidAttr) {\n    throw new Error(PROMPT_MSG.wrong_attr);\n  }\n\n  return validAttrs.includes(attr);\n};\n\nconst validateText = (text: string | null): string => {\n  if (!text) {\n    throw new Error(PROMPT_MSG.empty_text);\n  }\n\n  return text;\n};\n\nexport { validateElements, validateAttr, validateAttrInList, validateText };\n","import { validateElements, validateText } from './validator';\n\nconst getElements = (selector: string): NodeListOf<Element> => {\n  const elements = document.querySelectorAll(selector);\n  validateElements(elements);\n\n  return elements;\n};\n\nconst getElementAttr = (element: Element, customAttr: string): string => {\n  const attr = element.getAttribute(validateText(customAttr));\n  return validateText(attr);\n};\n\nexport { getElements, getElementAttr };\n","import { onEvent } from '../../services/lifecycleManager';\nimport { getElementAttr, getElements } from '../../services/getter';\nimport { validateAttrInList } from '../../services/validator';\nimport {\n  disableContextMenu,\n  disableDrag,\n  disableKeydown,\n} from './common/common';\nimport PROMPT_MSG from '../../config/constants';\n\ntype PreventAction = 'left_click' | 'drag' | 'keydown';\ntype PreventHandler = (elem: Element) => void;\n\nconst preventActionMap: Record<PreventAction, PreventHandler> = {\n  left_click: disableContextMenu,\n  drag: disableDrag,\n  keydown: disableKeydown,\n};\n\nconst preventCopy = () => {\n  const customAttr = 'tc-prevent-copy';\n  const attrValue = ['left_click', 'drag', 'keydown'];\n\n  const elements = getElements(`[${customAttr}]`);\n\n  elements.forEach((elem: Element) => {\n    const attr = getElementAttr(elem, customAttr);\n\n    const validAttrs = attr\n      .split(',')\n      .map((action) => action.trim())\n      .filter((action): action is PreventAction =>\n        validateAttrInList(action, attrValue),\n      );\n\n    if (validAttrs) {\n      validAttrs.forEach((attr) => {\n        preventActionMap[attr](elem);\n      });\n    } else throw new Error(PROMPT_MSG.wrong_attr);\n  });\n};\n\nonEvent('DOMContentLoaded', preventCopy);\n\nexport default preventCopy;\n","import { onEvent } from '../../services/lifecycleManager';\nimport { getElementAttr, getElements } from '../../services/getter';\nimport { validateAttr } from '../../services/validator';\nimport { disableContextMenu } from './common/common';\n\nconst preventContextMenu = () => {\n  const customAttr = 'tc-prevent-contextmenu';\n  const attrValue = 'true';\n\n  const elements = getElements(`[${customAttr}]`);\n\n  elements.forEach((elem: Element) => {\n    const attr = getElementAttr(elem, customAttr);\n\n    if (validateAttr(attr, attrValue)) {\n      disableContextMenu();\n    }\n  });\n};\n\nonEvent('DOMContentLoaded', preventContextMenu);\n\nexport default preventContextMenu;\n","import { onEvent } from '../../services/lifecycleManager';\nimport { getElementAttr, getElements } from '../../services/getter';\nimport { validateAttr } from '../../services/validator';\nimport { disableDrag } from './common/common';\n\nconst preventDrag = () => {\n  const customAttr = 'tc-prevent-drag';\n  const attrValue = 'true';\n\n  const elements = getElements(`[${customAttr}]`);\n\n  elements.forEach((elem: Element) => {\n    const attr = getElementAttr(elem, customAttr);\n\n    if (validateAttr(attr, attrValue)) {\n      disableDrag();\n    }\n  });\n};\n\nonEvent('DOMContentLoaded', preventDrag);\n\nexport default preventDrag;\n","import { onEvent } from '../../services/lifecycleManager';\nimport { getElementAttr, getElements } from '../../services/getter';\nimport { validateAttr } from '../../services/validator';\nimport { disableKeydown } from './common/common';\n\nconst preventKeydown = () => {\n  const customAttr = 'tc-prevent-keydown';\n  const attrValue = 'true';\n\n  const elements = getElements(`[${customAttr}]`);\n\n  elements.forEach((elem: Element) => {\n    const attr = getElementAttr(elem, customAttr);\n\n    if (validateAttr(attr, attrValue)) {\n      disableKeydown();\n    }\n  });\n};\n\nonEvent('DOMContentLoaded', preventKeydown);\n\nexport default preventKeydown;\n"],"names":["disableContextMenu","document","addEventListener","event","preventDefault","disableDrag","disableKeydown","lifecycleEvents","DOMContentLoaded","load","beforeunload","unload","eventFired","onEvent","callback","_a","push","forEach","window","PROMPT_MSG","validateAttr","attr","value","isValidAttr","Error","validateText","text","getElements","selector","elements","querySelectorAll","validateElements","getElementAttr","element","customAttr","getAttribute","preventActionMap","left_click","drag","keydown","attrValue","elem","validAttrs","split","map","action","trim","filter","includes","validateAttrInList"],"mappings":"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"}