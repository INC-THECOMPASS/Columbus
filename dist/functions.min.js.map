{"version":3,"file":"functions.min.js","sources":["../src/helpers/lifecycleManager.ts","../src/core/constants.ts","../src/helpers/getter.ts","../src/helpers/validator.ts","../src/utils/functions/disableDrag.ts"],"sourcesContent":["type LifecycleEvent = 'DOMContentLoaded' | 'load' | 'beforeunload' | 'unload';\n\nconst lifecycleEvents: { [key in LifecycleEvent]?: Array<() => void> } = {\n  DOMContentLoaded: [],\n  load: [],\n  beforeunload: [],\n  unload: [],\n};\n\nconst eventFired: { [key in LifecycleEvent]?: boolean } = {\n  DOMContentLoaded: false,\n  load: false,\n  beforeunload: false,\n  unload: false,\n};\n\n// 콜백 등록 함수\nexport function onEvent(event: LifecycleEvent, callback: () => void) {\n  if (eventFired[event]) {\n    callback();\n    return;\n  }\n\n  lifecycleEvents[event]?.push(callback);\n}\n\n// 각 이벤트 발생 시 콜백 실행\ndocument.addEventListener('DOMContentLoaded', () => {\n  eventFired.DOMContentLoaded = true;\n  lifecycleEvents.DOMContentLoaded?.forEach((callback) => callback());\n});\n\nwindow.addEventListener('load', () => {\n  eventFired.load = true;\n  lifecycleEvents.load?.forEach((callback) => callback());\n});\n\nwindow.addEventListener('beforeunload', () => {\n  eventFired.beforeunload = true;\n  lifecycleEvents.beforeunload?.forEach((callback) => callback());\n});\n\nwindow.addEventListener('unload', () => {\n  eventFired.unload = true;\n  lifecycleEvents.unload?.forEach((callback) => callback());\n});\n","export const PROMPT_MSG = {\n  empty_text: '빈 값 입니다.',\n  empty_elem: '선택된 요소가 없습니다.',\n  wrong_attr: '잘못된 속성 값을 입력하셨습니다.'\n};\n\n","import { validateElements, validateText } from './validator';\n\nexport const getElements = (selector: string): NodeListOf<Element> => {\n  const elements = document.querySelectorAll(selector);\n  validateElements(elements);\n\n  return elements;\n};\n\nexport const getElementAttr = (\n  element: Element,\n  customAttr: string,\n): string => {\n  return validateText(customAttr);\n};\n","import { PROMPT_MSG } from '../core/constants';\n\nexport const validateElements = (\n  elements: NodeListOf<Element> | null,\n): Element | NodeListOf<Element> => {\n  if (!elements) {\n    throw new Error(PROMPT_MSG.empty_elem);\n  }\n\n  return elements;\n};\n\nexport const validateElementAttr = (attr: string, value: string): boolean => {\n  return attr === value;\n};\n\nexport const validateText = (text: string | null): string => {\n  if (!text) {\n    throw new Error(PROMPT_MSG.empty_text);\n  }\n\n  return text;\n};\n","import { onEvent } from '../../helpers/lifecycleManager';\nimport { getElementAttr, getElements } from '../../helpers/getter';\nimport { PROMPT_MSG } from '../../core/constants';\n\nexport const disableDrag = () => {\n  const customAttr = 'tc-functions-element';\n  const attrValue = ['disable-drag', 'disable-drag-except-menu'];\n\n  const elements = getElements(`[${customAttr}]`);\n\n  elements.forEach((elem: Element) => {\n    const attr = getElementAttr(elem, customAttr);\n\n    switch (attr) {\n      case attrValue[0]:\n        _disableContextMenu(elem);\n        _disableKeyDown(elem);\n        _disableDragStart(elem);\n        break;\n      case attrValue[1]:\n        _disableKeyDown(elem);\n        _disableDragStart(elem);\n        break;\n      default:\n        throw new Error(PROMPT_MSG.wrong_attr);\n    }\n  });\n};\n\nconst _disableContextMenu = (elem: Element): void => {\n  elem.addEventListener('contextmenu', (event) => {\n    event.preventDefault();\n  });\n};\n\nconst _disableKeyDown = (elem: Element): void => {\n  elem.addEventListener('selectstart', (event) => {\n    event.preventDefault();\n  });\n};\n\nconst _disableDragStart = (elem: Element): void => {\n  elem.addEventListener('dragstart', (event) => {\n    event.preventDefault();\n  });\n};\n\nonEvent('DOMContentLoaded', disableDrag);\n"],"names":["lifecycleEvents","DOMContentLoaded","load","beforeunload","unload","eventFired","document","addEventListener","_a","forEach","callback","window","PROMPT_MSG","getElements","selector","elements","querySelectorAll","Error","validateElements","disableDrag","customAttr","attrValue","elem","attr","element","getElementAttr","_disableContextMenu","_disableKeyDown","_disableDragStart","event","preventDefault","push"],"mappings":"yPAEA,MAAMA,EAAmE,CACvEC,iBAAkB,GAClBC,KAAM,GACNC,aAAc,GACdC,OAAQ,IAGJC,EAAoD,CACxDJ,kBAAkB,EAClBC,MAAM,EACNC,cAAc,EACdC,QAAQ,GAcVE,SAASC,iBAAiB,oBAAoB,WAC5CF,EAAWJ,kBAAmB,EACE,QAAhCO,EAAAR,EAAgBC,wBAAgB,IAAAO,GAAAA,EAAEC,SAASC,GAAaA,KAAW,IAGrEC,OAAOJ,iBAAiB,QAAQ,WAC9BF,EAAWH,MAAO,EACE,QAApBM,EAAAR,EAAgBE,YAAI,IAAAM,GAAAA,EAAEC,SAASC,GAAaA,KAAW,IAGzDC,OAAOJ,iBAAiB,gBAAgB,WACtCF,EAAWF,cAAe,EACE,QAA5BK,EAAAR,EAAgBG,oBAAY,IAAAK,GAAAA,EAAEC,SAASC,GAAaA,KAAW,IAGjEC,OAAOJ,iBAAiB,UAAU,WAChCF,EAAWD,QAAS,EACE,QAAtBI,EAAAR,EAAgBI,cAAM,IAAAI,GAAAA,EAAEC,SAASC,GAAaA,KAAW,IC5CpD,MAAME,EAEC,gBAFDA,EAGC,qBCDDC,EAAeC,IAC1B,MAAMC,EAAWT,SAASU,iBAAiBF,GAG3C,MCJ8B,CAC9BC,IAEA,IAAKA,EACH,MAAM,IAAIE,MAAML,EAGH,EDLfM,CAAiBH,GAEVA,CAAQ,EEFJI,EAAc,KACzB,MAAMC,EAAa,uBACbC,EAAY,CAAC,eAAgB,4BAElBR,EAAY,IAAIO,MAExBX,SAASa,IAChB,MAAMC,EFFoB,EAC5BC,EACAJ,IAEoBA,EEFLK,CAAeH,EAAMF,GAElC,OAAQG,GACN,KAAKF,EAAU,GACbK,EAAoBJ,GACpBK,EAAgBL,GAChBM,EAAkBN,GAClB,MACF,KAAKD,EAAU,GACbM,EAAgBL,GAChBM,EAAkBN,GAClB,MACF,QACE,MAAM,IAAIL,MAAML,MAEpB,EAGEc,EAAuBJ,IAC3BA,EAAKf,iBAAiB,eAAgBsB,IACpCA,EAAMC,gBAAgB,GACtB,EAGEH,EAAmBL,IACvBA,EAAKf,iBAAiB,eAAgBsB,IACpCA,EAAMC,gBAAgB,GACtB,EAGEF,EAAqBN,IACzBA,EAAKf,iBAAiB,aAAcsB,IAClCA,EAAMC,gBAAgB,GACtB,EJ3BY,IAAQD,EAAuBnB,IAAAA,EI8BnBS,EJ7BtBd,EADkBwB,EI8BhB,oBJ5BJnB,YAIFF,EAAAR,EAAgB6B,mBAAQE,KAAKrB"}